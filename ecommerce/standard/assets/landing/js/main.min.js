'use strict';
(window.SrInfotech = {}),
  (function (t) {
    (SrInfotech.$window = t(window)),
      (SrInfotech.$body = t(document.body)),
      (SrInfotech.status = ''),
      (SrInfotech.isIE = navigator.userAgent.indexOf('Trident') >= 0),
      (SrInfotech.isEdge = navigator.userAgent.indexOf('Edge') >= 0),
      (SrInfotech.isMobile =
        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
          navigator.userAgent
        )),
      (SrInfotech.call = function (t, i) {
        setTimeout(t, i);
      }),
      (SrInfotech.parseOptions = function (t) {
        return 'string' == typeof t
          ? JSON.parse(t.replace(/'/g, '"').replace(';', ''))
          : {};
      }),
      (SrInfotech.byId = function (t) {
        return document.getElementById(t);
      }),
      (SrInfotech.byClass = function (t, i) {
        return i
          ? i.getElementsByClassName(t)
          : document.getElementsByClassName(t);
      }),
      (SrInfotech.$ = function (i) {
        return i instanceof jQuery ? i : t(i);
      }),
      (SrInfotech.isInViewport = function (t, i, e) {
        var a = window.pageXOffset,
          n = window.pageYOffset,
          o = t.getBoundingClientRect(),
          s = o.left + a,
          r = o.top + n,
          l = void 0 === i ? 0 : i,
          d = void 0 === e ? 0 : e;
        return (
          r + o.height + d >= n &&
          r <= n + window.innerHeight + d &&
          s + o.width + l >= a &&
          s <= a + window.innerWidth + l
        );
      }),
      (SrInfotech.appear = function (i, e, a) {
        return (
          a &&
            Object.keys(a).length &&
            t.extend(intersectionObserverOptions, a),
          new IntersectionObserver(
            function (t) {
              for (var i = 0; i < t.length; i++) {
                var a = t[i];
                if (a.intersectionRatio > 0)
                  if ('string' == typeof e)
                    Function('return ' + functionName)();
                  else e.call(a.target);
              }
            },
            { rootMargin: '0px 0px 200px 0px', threshold: 0, alwaysObserve: !0 }
          ).observe(i),
          this
        );
      }),
      (SrInfotech.requestTimeout = function (t, i) {
        var e =
          window.requestAnimationFrame ||
          window.webkitRequestAnimationFrame ||
          window.mozRequestAnimationFrame;
        if (!e) return setTimeout(t, i);
        var a,
          n = new Object();
        return (
          (n.val = e(function o(s) {
            a || (a = s), s - a >= i ? t() : (n.val = e(o));
          })),
          n
        );
      }),
      (SrInfotech.initScrollTopButton = function () {
        var i = SrInfotech.byId('scroll-top');
        i.addEventListener('click', function (i) {
          t('html, body').animate({ scrollTop: 0 }, 600), i.preventDefault();
        });
        var e = function () {
          if (window.pageYOffset > 400) {
            i.classList.add('show');
            var e = t(document).height(),
              a = t(window).height(),
              n = (t(window).scrollTop() / (e - a)) * 214;
            t('#progress-indicator').length > 0 &&
              t('#progress-indicator').css('stroke-dasharray', n + ', 400');
          } else i.classList.remove('show');
        };
        SrInfotech.call(e, 500),
          window.addEventListener('scroll', e, { passive: !0 });
      }),
      (SrInfotech.stickyDefaultOptions = {
        minWidth: 992,
        maxWidth: 2e4,
        top: !1,
        hide: !1,
      }),
      (SrInfotech.setStickyContent = function (i, e) {
        var a = SrInfotech.$(i),
          n = t.extend({}, SrInfotech.stickyDefaultOptions, e);
        if (0 != a.length) {
          var o = function () {
              a.each(function (i) {
                var e = t(this);
                if (e.data('is-wrap'))
                  (window.innerWidth < n.minWidth ||
                    window.innerWidth >= n.maxWidth) &&
                    (e.unwrap('.sticky-content-wrapper'),
                    e.data('is-wrap', !1));
                else {
                  var a,
                    o = e.removeClass('fixed').outerHeight(!0);
                  if (((a = e.offset().top + o), e.hasClass('has-dropdown'))) {
                    var s = e.find('.category-dropdown .dropdown-box');
                    s.length && (a += s[0].offsetHeight);
                  }
                  e.data('top', a),
                    (function (t, i) {
                      window.innerWidth >= n.minWidth &&
                        window.innerWidth <= n.maxWidth &&
                        (t.wrap(
                          '<div class="sticky-content-wrapper" style="height:' +
                            i +
                            'px;"></div>'
                        ),
                        t.data('is-wrap', !0));
                    })(e, o);
                }
              });
            },
            s = function (i) {
              (i && !i.isTrusted) ||
                a.each(function (i) {
                  var e = t(this);
                  window.pageYOffset > (0 == n.top ? e.data('top') : n.top) &&
                  window.innerWidth >= n.minWidth &&
                  window.innerWidth <= n.maxWidth
                    ? (e.hasClass('fix-top')
                        ? (e.data('offset-top') &&
                            (function (i) {
                              var e = 0,
                                a = 0;
                              t('.sticky-content.fixed.fix-top').each(
                                function () {
                                  (e += t(this)[0].offsetHeight), a++;
                                }
                              ),
                                i.data('offset-top', e),
                                i.data('z-index', n.max_index - a);
                            })(e),
                          e.css('margin-top', e.data('offset-top') + 'px'))
                        : e.hasClass('fix-bottom') &&
                          (e.data('offset-bottom') &&
                            (function (i) {
                              var e = 0,
                                a = 0;
                              t('.sticky-content.fixed.fix-bottom').each(
                                function () {
                                  (e += t(this)[0].offsetHeight), a++;
                                }
                              ),
                                i.data('offset-bottom', e),
                                i.data('z-index', n.max_index - a);
                            })(e),
                          e.css(
                            'margin-bottom',
                            e.data('offset-bottom') + 'px'
                          )),
                      e.css('z-index', e.data('z-index')),
                      e.addClass('fixed'),
                      n.hide &&
                        e.parent('.sticky-content-wrapper').css('display', ''))
                    : (e.removeClass('fixed'),
                      e.css('margin-top', ''),
                      e.css('margin-bottom', ''),
                      n.hide &&
                        e
                          .parent('.sticky-content-wrapper')
                          .css('display', 'none'));
                });
            };
          SrInfotech.call(o, 550),
            SrInfotech.call(s, 660),
            SrInfotech.call(function () {
              window.addEventListener('scroll', s, { passive: !0 }),
                SrInfotech.$window.on('resize', o),
                SrInfotech.$window.on('resize', s);
            }, 700);
        }
      }),
      (SrInfotech.parallax = function (i, e) {
        t.fn.themePluginParallax &&
          SrInfotech.$(i).each(function () {
            var i = t(this);
            i.themePluginParallax(
              t.extend(
                !0,
                SrInfotech.parseOptions(i.attr('data-parallax-options')),
                e
              )
            );
          });
      }),
      (SrInfotech.animationOptions = {
        name: 'fadeIn',
        duration: '.9s',
        delay: '.2s',
      }),
      (SrInfotech.appearAnimate = function (i) {
        SrInfotech.$(i).each(function () {
          var i = this;
          SrInfotech.appear(i, function () {
            if (i.classList.contains('appear-animate')) {
              var e = t.extend(
                {},
                SrInfotech.animationOptions,
                SrInfotech.parseOptions(
                  i.getAttribute('data-animation-options')
                )
              );
              setTimeout(
                function () {
                  (i.style['animation-duration'] = e.duration),
                    i.classList.add(e.name),
                    i.classList.add('appear-animation-visible'),
                    setTimeout(
                      function () {
                        'function' == typeof t(i).data('appear-callback') &&
                          t(i).data('appear-callback').call(i);
                      },
                      e.duration ? 1e3 * Number(e.duration.slice(0, -1)) : 0
                    );
                },
                e.delay ? 1e3 * Number(e.delay.slice(0, -1)) : 0
              );
            }
          });
        });
      }),
      (SrInfotech.lazyLoad = function (t, i) {
        function e() {
          this.setAttribute('src', this.getAttribute('data-src')),
            this.addEventListener('load', function () {
              (this.style['padding-top'] = ''),
                this.classList.remove('lazy-img');
            });
        }
        SrInfotech.$(t)
          .find('.lazy-img')
          .each(function () {
            void 0 !== i && i ? e.call(this) : SrInfotech.appear(this, e);
          });
      }),
      (SrInfotech.countTo = function (i) {
        t.fn.countTo &&
          SrInfotech.$(i).each(function () {
            SrInfotech.appear(this, function () {
              var i = t(this);
              setTimeout(function () {
                i.countTo({
                  onComplete: function () {
                    i.addClass('complete');
                  },
                });
              }, 300);
            });
          });
      });
    var i = function () {
        SrInfotech.$body.addClass('mmenu-active');
      },
      e = function () {
        SrInfotech.$body.removeClass('mmenu-active');
      },
      a = {
        init: function () {
          this.initMobileMenu();
        },
        initMobileMenu: function () {
          t('.mobile-menu li, .toggle-menu li').each(function () {
            if (
              this.lastElementChild &&
              ('UL' === this.lastElementChild.tagName ||
                this.lastElementChild.classList.contains('megamenu'))
            ) {
              var t = document.createElement('span');
              (t.className = 'toggle-btn'),
                this.firstElementChild.appendChild(t);
            }
          }),
            t('.mobile-menu-toggle').on('click', i),
            t('.mobile-menu-overlay').on('click', e),
            t('.mobile-menu-close').on('click', e),
            SrInfotech.$window.on('resize', e);
        },
      };
    (SrInfotech.menu = a),
      (function (t) {
        function i(t, i) {
          return this.init(t, i);
        }
        var e = function (t) {
            var i = this.wrapperEl,
              e = i.getAttribute('class');
            if (
              (e.match(/row|gutter\-\w\w|cols\-\d|cols\-\w\w-\d/g) &&
                i.setAttribute(
                  'class',
                  e
                    .replace(/row|gutter\-\w\w|cols\-\d|cols\-\w\w-\d/g, '')
                    .replace(/\s+/, ' ')
                ),
              i.classList.contains('animation-slider'))
            )
              for (var a = i.children, n = a.length, o = 0; o < n; ++o)
                a[o].setAttribute('data-index', o + 1);
          },
          a = function (t) {
            var i,
              e = this.firstElementChild.firstElementChild.children,
              a = e.length;
            for (i = 0; i < a; ++i)
              if (!e[i].classList.contains('active')) {
                var n,
                  o = SrInfotech.byClass('appear-animate', e[i]);
                for (n = o.length - 1; n >= 0; --n)
                  o[n].classList.remove('appear-animate');
              }
          },
          n = function (i) {
            t(window).trigger('appear.check');
            var e = t(i.currentTarget),
              a = e.find('.swiper-slide.active video');
            e.find('.swiper-slide:not(.active) video').each(function () {
              this.pause(), (this.currentTime = 0);
            }),
              a.length &&
                a.each(function () {
                  this.paused && this.play();
                });
          },
          o = function () {
            var i = this;
            t(this.wrapperEl)
              .find('.swiper-slide-active .slide-animate')
              .each(function () {
                var e = t(this),
                  a = t.extend(
                    !0,
                    {},
                    SrInfotech.animationOptions,
                    SrInfotech.parseOptions(e.data('animation-options'))
                  ),
                  n = a.duration,
                  o = a.delay,
                  s = a.name;
                setTimeout(function () {
                  if (
                    (e.css('animation-duration', n),
                    e.css('animation-delay', o),
                    e.addClass(s),
                    e.hasClass('maskLeft'))
                  ) {
                    e.css('width', 'fit-content');
                    var t = e.width();
                    e
                      .css('width', 0)
                      .css(
                        'transition',
                        'width ' + (n || '0.75s') + ' linear ' + (o || '0s')
                      ),
                      e.css('width', t);
                  }
                  n = n || '0.75s';
                  var a = SrInfotech.requestTimeout(
                    function () {
                      e.addClass('show-content');
                    },
                    o ? 1e3 * Number(o.slice(0, -1)) + 200 : 200
                  );
                  i.timers.push(a);
                }, 300);
              });
          },
          s = function (i) {
            t(this.wrapperEl)
              .find('.swiper-slide-active .slide-animate')
              .each(function () {
                var i = t(this);
                i.addClass('show-content'), i.attr('style', '');
              });
          },
          r = function (i) {
            var e = this,
              a = t(this.wrapperEl);
            (e.translateFlag = 1),
              (e.prev = e.next),
              a.find('.swiper-slide .slide-animate').each(function () {
                var i = t(this),
                  e = t.extend(
                    !0,
                    {},
                    SrInfotech.animationOptions,
                    SrInfotech.parseOptions(i.data('animation-options'))
                  );
                i.removeClass(e.name);
              });
          },
          l = function (i) {
            var e = this,
              a = t(this.wrapperEl);
            if (1 == e.translateFlag) {
              if (
                ((e.next = this.slider.activeIndex),
                a.find('.show-content').removeClass('show-content'),
                e.prev != e.next)
              ) {
                if (
                  (a.find('.show-content').removeClass('show-content'),
                  a.hasClass('animation-slider'))
                ) {
                  for (var n = 0; n < e.timers.length; n++)
                    SrInfotech.deleteTimeout(e.timers[n]);
                  e.timers = [];
                }
                a.find('.swiper-slide-active .slide-animate').each(function () {
                  var i = t(this),
                    a = t.extend(
                      !0,
                      {},
                      SrInfotech.animationOptions,
                      SrInfotech.parseOptions(i.data('animation-options'))
                    ),
                    n = a.duration,
                    o = a.delay,
                    s = a.name;
                  i.css('animation-duration', n),
                    i.css('animation-delay', o),
                    i.css('transition-property', 'visibility, opacity'),
                    i.css('transition-delay', o),
                    i.css('transition-duration', n),
                    i.addClass(s),
                    (n = n || '0.75s'),
                    i.addClass('show-content');
                  var r = SrInfotech.requestTimeout(
                    function () {
                      i.css('transition-property', ''),
                        i.css('transition-delay', ''),
                        i.css('transition-duration', ''),
                        e.timers.splice(e.timers.indexOf(r), 1);
                    },
                    o
                      ? 1e3 * Number(o.slice(0, -1)) +
                          500 * Number(n.slice(0, -1))
                      : 500 * Number(n.slice(0, -1))
                  );
                  e.timers.push(r);
                });
              } else
                a.find('.swiper-slide')
                  .eq(this.slider.activeIndex)
                  .find('.slide-animate')
                  .addClass('show-content');
              e.translateFlag = 0;
            }
          };
        (i.defaults = { slidesPerView: 1 }),
          (i.zoomImage = function () {
            SrInfotech.zoomImage(this.$element);
          }),
          (i.zoomImageRefresh = function () {
            this.$element.find('img').each(function () {
              var i = t(this);
              if (t.fn.zoom) {
                var e = i.data('zoom');
                void 0 !== e
                  ? e.refresh()
                  : ((SrInfotech.zoomImageOptions.zoomContainer = i.parent()),
                    i.zoom(SrInfotech.zoomImageOptions));
              }
            });
          }),
          (i.presets = {}),
          (i.prototype.init = function (d, c) {
            (this.timers = []),
              (this.translateFlag = 0),
              (this.prev = 0),
              (this.next = 0),
              (this.container = d[0]),
              (this.wrapperEl = d.children()[0]);
            var m = d.children('.swiper-button-next'),
              u = d.children('.swiper-button-prev'),
              h = d.children('.swiper-pagination'),
              p = d.children('.custom-dots');
            if (!d.data('slider')) {
              SrInfotech.lazyLoad(d, !0);
              var f = d.attr('class').split(' '),
                w = t.extend(!0, {}, i.defaults);
              f.forEach(function (e) {
                var a = i.presets[e];
                a && t.extend(!0, w, a);
              }),
                m.length && t.extend(!0, w, { navigation: { nextEl: m[0] } }),
                u.length && t.extend(!0, w, { navigation: { prevEl: u[0] } }),
                h.length &&
                  t.extend(!0, w, { pagination: { el: h[0], clickable: !0 } }),
                d.find('video').each(function () {
                  this.loop = !1;
                }),
                t.extend(
                  !0,
                  w,
                  SrInfotech.parseOptions(d.attr('data-swiper-options')),
                  c
                ),
                e.call(this),
                (this.slider = new Swiper(this.container, w)),
                d.data('slider', this.slider),
                d.trigger('initialized.slider', this.slider),
                this.slider.on('afterInit', a).on('transitionEnd', n),
                d.hasClass('animation-slider') && o.call(this),
                d.hasClass('animation-slider') &&
                  this.slider
                    .on('resize', s)
                    .on('transitionStart', r.bind(this))
                    .on('transitionEnd', l.bind(this)),
                p.length &&
                  (this.slider.on('transitionEnd', function () {
                    var t = this.activeIndex;
                    p.children('a:nth-child(' + ++t + ')')
                      .addClass('active')
                      .siblings()
                      .removeClass('active');
                  }),
                  p.children('a').on('click', function (i) {
                    i.preventDefault();
                    var e = t(this);
                    if (!e.hasClass('active')) {
                      var a = e.index();
                      e.closest('.swiper-container').data('slider').slideTo(a),
                        e.addClass('active').siblings().removeClass('active');
                    }
                  }));
            }
          }),
          (SrInfotech.slider = function (e, a = {}, n = !1) {
            SrInfotech.$(e).each(function () {
              var e = t(this);
              n
                ? new i(e, a)
                : SrInfotech.call(function () {
                    new i(e, a);
                  });
            });
          });
      })(jQuery);
  })(jQuery),
  jQuery,
  (SrInfotech.prepare = function () {
    SrInfotech.$body.hasClass('with-flex-container') &&
      window.innerWidth >= 1200 &&
      SrInfotech.$body.addClass('sidebar-active');
  }),
  (SrInfotech.init = function () {
    SrInfotech.appearAnimate('.appear-animate'),
      SrInfotech.slider('.swiper-container'),
      SrInfotech.setStickyContent('.sticky-header'),
      SrInfotech.setStickyContent('.sticky-footer', {
        minWidth: 0,
        maxWidth: 767,
        top: 150,
        hide: !0,
        max_index: 2100,
      }),
      SrInfotech.parallax('.parallax'),
      SrInfotech.menu.init(),
      SrInfotech.initScrollTopButton(),
      SrInfotech.countTo('.count-to');
  }),
  jQuery,
  SrInfotech.prepare(),
  (document.onreadystatechange = function () {
    document.readyState;
  }),
  (window.onload = function () {
    (SrInfotech.status = 'loaded'),
      document.body.classList.add('loaded'),
      SrInfotech.call(SrInfotech.initLayout),
      SrInfotech.call(SrInfotech.init),
      (SrInfotech.status = 'complete'),
      SrInfotech.$window.trigger('wolmart_complete');
  });
